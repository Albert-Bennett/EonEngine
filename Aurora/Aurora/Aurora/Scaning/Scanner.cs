/* Created: 29/08/2015
 * Last Updated: 02/09/2015
 * 
 * Author: Albert Bennett.
 * Copyright @ Epsilonic Studios.
 */

using Aurora.Tokens;
using System.Collections.Generic;
using System.IO;

namespace Aurora.Scaning
{
    /// <summary>
    /// Defines a Scanner for .Aurora files.
    /// </summary>
    internal sealed class Scanner : BinaryReader
    {
        List<Token> tokens = new List<Token>();

        /// <summary>
        /// The Tokens generated by the Lexer.
        /// </summary>
        public List<Token> Tokens
        {
            get { return tokens; }
        }

        /// <summary>
        /// Creates a new Scanner.
        /// </summary>
        /// <param name="stream">The file stream to be used.</param>
        /// <param name="script">The Script file to have the data set.</param>
        public Scanner(Stream stream, Script script)
            : base(stream)
        {
            List<Character> characters = new List<Character>();

            using (stream)
            {
                BaseStream.Position = sizeof(char) + 1;

                int index = (int)BaseStream.Position;
                int lineIndex = 0;
                int length = (int)BaseStream.Length;

                while (index < length)
                {
                    char value = ReadChar();

                    if (value == '\n' || value == '\r' || value == '\t' || value == ' ')
                        lineIndex++;
                    else
                        characters.Add(new Character()
                        {
                            Value = value,
                            LineIndex = lineIndex,
                            Index = (int)this.BaseStream.Position
                        });

                    index = (int)BaseStream.Position;
                }

                stream.Close();
            }

            new Lexer(characters, ref tokens);
        }
    }
}
